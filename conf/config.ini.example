[general]
    # what system we are using: 'omp' or 'ojs'
    system = ojs
    # your OJS/OMP Server 
    # token from your OJS/OMP (generate/copy with/from WEB-GUI)
    api_token = <token>
    endpoint_contexts = /api/v1/contexts?isEnabled=true
    endpoint_submissions = /api/v1/submissions
    endpoint_issues = /api/v1/issues
    journal_server = <https://ojs.example.com>
    # Monograph / Article
    type = Article
    token = <some auto generated token in SetRemoteUrlPlugin>
    # update remote_url with DOI in OJS/OMP
    update_remote = True
    # path where to write logfiles
    logpath = log/

[export]
    # store zip (SAFs) files here
    export_path = ./export
    # collection in dspace (ask your Dspace Admin for this number)
    collection = 123456789/26132
    # if you write back the DOI to OJS/OMP, this will be the prefix 
    doi_prefix = http://dx.doi.org/
    # True / False filename of galleys should be auto generated 
    generate_filename = True

[scp]
    # you need to activate server access via ssh-key
    # dspace server
    server = ojs.example.com
    user = <user>
    key_filename = /home/<user>/.ssh/<id_rsa_ojs>

[docker]
    # this part is only for direct dspace docker access (see section [dspace])
    container = <dspace-container-name>
    user = dspace

[dspace]
    server_zipsource = /opt/dspace-test/volumes/infrastructure/ojs_omp/source/
    server_doifiles = /opt/dspace-test/volumes/infrastructure/ojs_omp/doi/

    ## following is only for direct Dspace docker access 
    ## you need to activate/include the module *transfer_saf.py*
    # dspace executable
    # eperson = omp@example.com
    # docker_dspace = /opt/dspace/repo/bin/dspace
    # docker_mapfile = /opt/dspace/repo/infrastructure/ojs_omp/map/
    # docker_zipsource = /opt/dspace/repo/infrastructure/ojs_omp/source/
    # extra = --disable_inheritance

#  filter journals, monographs from treating
[white-list]
    journals = name_of_journal1

[black-list]
    journals = name_of_journal2 name_of_journal3